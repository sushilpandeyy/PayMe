generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id                    Int            @id @default(autoincrement())
  email                 String         @unique
  name                  String? 
  password              String?
  auth_type             AuthType       @default(Google)
  image                 String?        @default("https://cdn.icon-icons.com/icons2/2643/PNG/512/male_boy_person_people_avatar_icon_159358.png")
  userID                String?        @unique
  sentTransactions      Transactions[] @relation("SentTransactions")
  receivedTransactions  Transactions[] @relation("ReceivedTransactions")
  accounts              Account[]      @relation("UserAccounts")
  createdAt             DateTime       @default(now()) @db.Timestamptz
  updatedAt             DateTime       @updatedAt @db.Timestamptz
}

model Transactions {
  Transaction_id String  @id @default(uuid())
  Amount         Int     
  Type           String
  Sender_Id      String  
  Receiver_Id    String     
  Category       String
  sender         User @relation("SentTransactions", fields: [Sender_Id], references: [userID])
  receiver       User @relation("ReceivedTransactions", fields: [Receiver_Id], references: [userID])
  createdAt      DateTime @default(now()) @db.Timestamptz
  updatedAt      DateTime @updatedAt @db.Timestamptz
}

model Account {
  Account_number  String @id 
  Balance         Int     
  PIN             String
  userID          String     
  user            User @relation("UserAccounts", fields: [userID], references: [userID])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Drop {
  DropID      String @id @default(uuid())
  Receiver_id String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
enum AuthType {
  Google
  Github
}